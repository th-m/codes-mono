{
  "resolvedId": "/Users/thom/Sites/th-m/th-m.codes.mono/packages/home/src/routes/(auth)/sign-up.tsx",
  "transforms": [
    {
      "name": "__load__",
      "result": "import { A, useLocation } from \"solid-start\";\nimport { createServerAction$, json, redirect } from \"solid-start/server\";\nimport { createUserSession } from \"~/models/session.server\";\nimport { createUser } from \"~/models/users.server\";\n\nexport default function SignUp() {\n  const location = useLocation();\n  const [signup, { Form }] = createServerAction$(\n    async (form: FormData, { request }) => {\n      const email = form.get(\"email\") as string;\n      const password = form.get(\"password\") as string;\n      const remember = form.get(\"remember\") as string;\n      const redirectTo = (form?.get(\"redirectTo\") ?? \"/\") as string;\n      const errors = {\n        email: \"\",\n        password: \"\",\n      };\n      if (!password || password.length < 6) {\n        errors.password = \"Password must be at least 6 characters long\";\n      }\n      if (!email) {\n        errors.email = \"Email is required\";\n      }\n\n      if (errors.email || errors.password) {\n        return { errors };\n      }\n      console.log({email, password})\n\n      const {session, error} = await createUser(email, password);\n      if(error) {\n        return json(\n          { errors: error },\n          { status: 400 }\n        );\n      }\n      \n      if (!session) {\n        return json(\n          { errors: { email: 'Invalid email or password' } },\n          { status: 400 }\n        );\n      }\n      \n      if (errors.email || errors.password) {\n        return json({ errors, },  { status: 400 });\n      }\n      return createUserSession({\n        request,\n         session,\n        remember: remember === 'on' ? true : false,\n        redirectTo: redirectTo ,\n      });\n    }\n  );\n\n  const redirectPath = location.query.redirectTo ?? \"/\";\n\n  // @ts-ignore\n  const errors = signup?.result?.errors as\n    | {\n        email: string;\n        password: string;\n      }\n    | undefined;\n\n  return (\n    <div>\n      <div>\n        <Form method=\"post\" noValidate>\n          <div>\n            <label for=\"email\">\n              <div>Email Address</div>\n              {errors?.email && (\n                <div class=\"error small\" id=\"email-error\">\n                  {errors?.email}\n                </div>\n              )}\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              aria-invalid={errors?.email ? true : false}\n              aria-describedby=\"email-error\"\n              aria-autocomplete=\"inline\"\n            />\n          </div>\n          <div>\n            <label for=\"password\">\n              <div>Password</div>\n              <div class=\"small\">Must have at least 6 characters.</div>\n              {errors?.password && (\n                <div class=\"error small\" id=\"password-error\">\n                  {errors?.password}\n                </div>\n              )}\n            </label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              aria-autocomplete=\"inline\"\n              aria-invalid={errors?.password ? true : false}\n              aria-describedby=\"password-error\"\n            />\n          </div>\n          <button type=\"submit\">Sign up</button>\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectPath} />\n          <div>\n            <div>\n              <input id=\"remember\" name=\"remember\" type=\"checkbox\" />\n              <label for=\"remember\">Remember me</label>\n            </div>\n            <div class=\"light\">\n              <span class=\"small\">Already have an account? </span>\n              <A href=\"/login\">Login</A>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n",
      "start": 1684878594172,
      "end": 1684878594172
    },
    {
      "name": "solid-start-file-system-router",
      "result": "import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { ssr as _$ssr } from \"solid-js/web\";\nimport { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nconst _tmpl$ = [\"<div\", \"><label for=\\\"email\\\"><div>Email Address</div><!--#-->\", \"<!--/--></label><input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\"\", \" aria-describedby=\\\"email-error\\\" aria-autocomplete=\\\"inline\\\"></div>\"],\n  _tmpl$2 = [\"<div\", \"><label for=\\\"password\\\"><div>Password</div><div class=\\\"small\\\">Must have at least 6 characters.</div><!--#-->\", \"<!--/--></label><input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" aria-autocomplete=\\\"inline\\\"\", \" aria-describedby=\\\"password-error\\\"></div>\"],\n  _tmpl$3 = [\"<button\", \" type=\\\"submit\\\">Sign up</button>\"],\n  _tmpl$4 = [\"<input\", \" type=\\\"hidden\\\" name=\\\"redirectTo\\\"\", \">\"],\n  _tmpl$5 = [\"<div\", \"><div><input id=\\\"remember\\\" name=\\\"remember\\\" type=\\\"checkbox\\\"><label for=\\\"remember\\\">Remember me</label></div><div class=\\\"light\\\"><span class=\\\"small\\\">Already have an account? </span><!--#-->\", \"<!--/--></div></div>\"],\n  _tmpl$6 = [\"<div\", \"><div>\", \"</div></div>\"],\n  _tmpl$7 = [\"<div\", \" class=\\\"error small\\\" id=\\\"email-error\\\">\", \"</div>\"],\n  _tmpl$8 = [\"<div\", \" class=\\\"error small\\\" id=\\\"password-error\\\">\", \"</div>\"];\nimport \"solid-start/data\";\nimport { createRouteAction } from \"solid-start/data\";\nimport server$ from \"solid-start/server\";\nimport { A, useLocation } from \"solid-start\";\nimport { json } from \"solid-start/server\";\nimport { createUserSession } from \"~/models/session.server\";\nimport { createUser } from \"~/models/users.server\";\nconst $$server_module0 = server$.createHandler(async function $$serverHandler0(form, {\n  request\n}) {\n  const $$ctx = this;\n  const email = form.get(\"email\");\n  const password = form.get(\"password\");\n  const remember = form.get(\"remember\");\n  const redirectTo = form?.get(\"redirectTo\") ?? \"/\";\n  const errors = {\n    email: \"\",\n    password: \"\"\n  };\n  if (!password || password.length < 6) {\n    errors.password = \"Password must be at least 6 characters long\";\n  }\n  if (!email) {\n    errors.email = \"Email is required\";\n  }\n  if (errors.email || errors.password) {\n    return {\n      errors\n    };\n  }\n  console.log({\n    email,\n    password\n  });\n  const {\n    session,\n    error\n  } = await createUser(email, password);\n  if (error) {\n    return json({\n      errors: error\n    }, {\n      status: 400\n    });\n  }\n  if (!session) {\n    return json({\n      errors: {\n        email: 'Invalid email or password'\n      }\n    }, {\n      status: 400\n    });\n  }\n  if (errors.email || errors.password) {\n    return json({\n      errors\n    }, {\n      status: 400\n    });\n  }\n  return createUserSession({\n    request,\n    session,\n    remember: remember === 'on' ? true : false,\n    redirectTo: redirectTo\n  });\n}, \"/_m/src/routes/(auth)/sign-up.tsx/0/signup\", true);\nserver$.registerHandler(\"/_m/src/routes/(auth)/sign-up.tsx/0/signup\", $$server_module0);\nexport default function SignUp() {\n  const location = useLocation();\n  const [signup, {\n    Form\n  }] = createRouteAction($$server_module0);\n  const redirectPath = location.query.redirectTo ?? \"/\";\n\n  // @ts-ignore\n  const errors = signup?.result?.errors;\n  return _$ssr(_tmpl$6, _$ssrHydrationKey(), _$escape(_$createComponent(Form, {\n    method: \"post\",\n    noValidate: true,\n    get children() {\n      return [_$ssr(_tmpl$, _$ssrHydrationKey(), errors?.email && _$ssr(_tmpl$7, _$ssrHydrationKey(), _$escape(errors?.email)), _$ssrAttribute(\"aria-invalid\", errors?.email ? _$escape(true, true) : _$escape(false, true), false)), _$ssr(_tmpl$2, _$ssrHydrationKey(), errors?.password && _$ssr(_tmpl$8, _$ssrHydrationKey(), _$escape(errors?.password)), _$ssrAttribute(\"aria-invalid\", errors?.password ? _$escape(true, true) : _$escape(false, true), false)), _$ssr(_tmpl$3, _$ssrHydrationKey()), _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"value\", _$escape(redirectPath, true), false)), _$ssr(_tmpl$5, _$ssrHydrationKey(), _$escape(_$createComponent(A, {\n        href: \"/login\",\n        children: \"Login\"\n      })))];\n    }\n  })));\n}",
      "start": 1684878594172,
      "end": 1684878594188,
      "order": "pre"
    },
    {
      "name": "solid",
      "result": "import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { ssr as _$ssr } from \"solid-js/web\";\nimport { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nconst _tmpl$ = [\"<div\", \"><label for=\\\"email\\\"><div>Email Address</div><!--#-->\", \"<!--/--></label><input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\"\", \" aria-describedby=\\\"email-error\\\" aria-autocomplete=\\\"inline\\\"></div>\"],\n  _tmpl$2 = [\"<div\", \"><label for=\\\"password\\\"><div>Password</div><div class=\\\"small\\\">Must have at least 6 characters.</div><!--#-->\", \"<!--/--></label><input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" aria-autocomplete=\\\"inline\\\"\", \" aria-describedby=\\\"password-error\\\"></div>\"],\n  _tmpl$3 = [\"<button\", \" type=\\\"submit\\\">Sign up</button>\"],\n  _tmpl$4 = [\"<input\", \" type=\\\"hidden\\\" name=\\\"redirectTo\\\"\", \">\"],\n  _tmpl$5 = [\"<div\", \"><div><input id=\\\"remember\\\" name=\\\"remember\\\" type=\\\"checkbox\\\"><label for=\\\"remember\\\">Remember me</label></div><div class=\\\"light\\\"><span class=\\\"small\\\">Already have an account? </span><!--#-->\", \"<!--/--></div></div>\"],\n  _tmpl$6 = [\"<div\", \"><div>\", \"</div></div>\"],\n  _tmpl$7 = [\"<div\", \" class=\\\"error small\\\" id=\\\"email-error\\\">\", \"</div>\"],\n  _tmpl$8 = [\"<div\", \" class=\\\"error small\\\" id=\\\"password-error\\\">\", \"</div>\"];\nimport \"solid-start/data\";\nimport { createRouteAction } from \"solid-start/data\";\nimport server$ from \"solid-start/server\";\nimport { A, useLocation } from \"solid-start\";\nimport { json } from \"solid-start/server\";\nimport { createUserSession } from \"~/models/session.server\";\nimport { createUser } from \"~/models/users.server\";\nconst $$server_module0 = server$.createHandler(async function $$serverHandler0(form, {\n  request\n}) {\n  const $$ctx = this;\n  const email = form.get(\"email\");\n  const password = form.get(\"password\");\n  const remember = form.get(\"remember\");\n  const redirectTo = form?.get(\"redirectTo\") ?? \"/\";\n  const errors = {\n    email: \"\",\n    password: \"\"\n  };\n  if (!password || password.length < 6) {\n    errors.password = \"Password must be at least 6 characters long\";\n  }\n  if (!email) {\n    errors.email = \"Email is required\";\n  }\n  if (errors.email || errors.password) {\n    return {\n      errors\n    };\n  }\n  console.log({\n    email,\n    password\n  });\n  const {\n    session,\n    error\n  } = await createUser(email, password);\n  if (error) {\n    return json({\n      errors: error\n    }, {\n      status: 400\n    });\n  }\n  if (!session) {\n    return json({\n      errors: {\n        email: 'Invalid email or password'\n      }\n    }, {\n      status: 400\n    });\n  }\n  if (errors.email || errors.password) {\n    return json({\n      errors\n    }, {\n      status: 400\n    });\n  }\n  return createUserSession({\n    request,\n    session,\n    remember: remember === 'on' ? true : false,\n    redirectTo: redirectTo\n  });\n}, \"/_m/src/routes/(auth)/sign-up.tsx/0/signup\", true);\nserver$.registerHandler(\"/_m/src/routes/(auth)/sign-up.tsx/0/signup\", $$server_module0);\nexport default function SignUp() {\n  const location = useLocation();\n  const [signup, {\n    Form\n  }] = createRouteAction($$server_module0);\n  const redirectPath = location.query.redirectTo ?? \"/\";\n\n  // @ts-ignore\n  const errors = signup?.result?.errors;\n  return _$ssr(_tmpl$6, _$ssrHydrationKey(), _$escape(_$createComponent(Form, {\n    method: \"post\",\n    noValidate: true,\n    get children() {\n      return [_$ssr(_tmpl$, _$ssrHydrationKey(), errors?.email && _$ssr(_tmpl$7, _$ssrHydrationKey(), _$escape(errors?.email)), _$ssrAttribute(\"aria-invalid\", errors?.email ? _$escape(true, true) : _$escape(false, true), false)), _$ssr(_tmpl$2, _$ssrHydrationKey(), errors?.password && _$ssr(_tmpl$8, _$ssrHydrationKey(), _$escape(errors?.password)), _$ssrAttribute(\"aria-invalid\", errors?.password ? _$escape(true, true) : _$escape(false, true), false)), _$ssr(_tmpl$3, _$ssrHydrationKey()), _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"value\", _$escape(redirectPath, true), false)), _$ssr(_tmpl$5, _$ssrHydrationKey(), _$escape(_$createComponent(A, {\n        href: \"/login\",\n        children: \"Login\"\n      })))];\n    }\n  })));\n}",
      "start": 1684878594188,
      "end": 1684878594194,
      "order": "pre"
    },
    {
      "name": "vite:define",
      "result": "import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { ssr as _$ssr } from \"solid-js/web\";\nimport { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nconst _tmpl$ = [\"<div\", \"><label for=\\\"email\\\"><div>Email Address</div><!--#-->\", \"<!--/--></label><input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\"\", \" aria-describedby=\\\"email-error\\\" aria-autocomplete=\\\"inline\\\"></div>\"],\n  _tmpl$2 = [\"<div\", \"><label for=\\\"password\\\"><div>Password</div><div class=\\\"small\\\">Must have at least 6 characters.</div><!--#-->\", \"<!--/--></label><input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" aria-autocomplete=\\\"inline\\\"\", \" aria-describedby=\\\"password-error\\\"></div>\"],\n  _tmpl$3 = [\"<button\", \" type=\\\"submit\\\">Sign up</button>\"],\n  _tmpl$4 = [\"<input\", \" type=\\\"hidden\\\" name=\\\"redirectTo\\\"\", \">\"],\n  _tmpl$5 = [\"<div\", \"><div><input id=\\\"remember\\\" name=\\\"remember\\\" type=\\\"checkbox\\\"><label for=\\\"remember\\\">Remember me</label></div><div class=\\\"light\\\"><span class=\\\"small\\\">Already have an account? </span><!--#-->\", \"<!--/--></div></div>\"],\n  _tmpl$6 = [\"<div\", \"><div>\", \"</div></div>\"],\n  _tmpl$7 = [\"<div\", \" class=\\\"error small\\\" id=\\\"email-error\\\">\", \"</div>\"],\n  _tmpl$8 = [\"<div\", \" class=\\\"error small\\\" id=\\\"password-error\\\">\", \"</div>\"];\nimport \"solid-start/data\";\nimport { createRouteAction } from \"solid-start/data\";\nimport server$ from \"solid-start/server\";\nimport { A, useLocation } from \"solid-start\";\nimport { json } from \"solid-start/server\";\nimport { createUserSession } from \"~/models/session.server\";\nimport { createUser } from \"~/models/users.server\";\nconst $$server_module0 = server$.createHandler(async function $$serverHandler0(form, {\n  request\n}) {\n  const $$ctx = this;\n  const email = form.get(\"email\");\n  const password = form.get(\"password\");\n  const remember = form.get(\"remember\");\n  const redirectTo = form?.get(\"redirectTo\") ?? \"/\";\n  const errors = {\n    email: \"\",\n    password: \"\"\n  };\n  if (!password || password.length < 6) {\n    errors.password = \"Password must be at least 6 characters long\";\n  }\n  if (!email) {\n    errors.email = \"Email is required\";\n  }\n  if (errors.email || errors.password) {\n    return {\n      errors\n    };\n  }\n  console.log({\n    email,\n    password\n  });\n  const {\n    session,\n    error\n  } = await createUser(email, password);\n  if (error) {\n    return json({\n      errors: error\n    }, {\n      status: 400\n    });\n  }\n  if (!session) {\n    return json({\n      errors: {\n        email: 'Invalid email or password'\n      }\n    }, {\n      status: 400\n    });\n  }\n  if (errors.email || errors.password) {\n    return json({\n      errors\n    }, {\n      status: 400\n    });\n  }\n  return createUserSession({\n    request,\n    session,\n    remember: remember === 'on' ? true : false,\n    redirectTo: redirectTo\n  });\n}, \"/_m/src/routes/(auth)/sign-up.tsx/0/signup\", true);\nserver$.registerHandler(\"/_m/src/routes/(auth)/sign-up.tsx/0/signup\", $$server_module0);\nexport default function SignUp() {\n  const location = useLocation();\n  const [signup, {\n    Form\n  }] = createRouteAction($$server_module0);\n  const redirectPath = location.query.redirectTo ?? \"/\";\n\n  // @ts-ignore\n  const errors = signup?.result?.errors;\n  return _$ssr(_tmpl$6, _$ssrHydrationKey(), _$escape(_$createComponent(Form, {\n    method: \"post\",\n    noValidate: true,\n    get children() {\n      return [_$ssr(_tmpl$, _$ssrHydrationKey(), errors?.email && _$ssr(_tmpl$7, _$ssrHydrationKey(), _$escape(errors?.email)), _$ssrAttribute(\"aria-invalid\", errors?.email ? _$escape(true, true) : _$escape(false, true), false)), _$ssr(_tmpl$2, _$ssrHydrationKey(), errors?.password && _$ssr(_tmpl$8, _$ssrHydrationKey(), _$escape(errors?.password)), _$ssrAttribute(\"aria-invalid\", errors?.password ? _$escape(true, true) : _$escape(false, true), false)), _$ssr(_tmpl$3, _$ssrHydrationKey()), _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"value\", _$escape(redirectPath, true), false)), _$ssr(_tmpl$5, _$ssrHydrationKey(), _$escape(_$createComponent(A, {\n        href: \"/login\",\n        children: \"Login\"\n      })))];\n    }\n  })));\n}",
      "start": 1684878594194,
      "end": 1684878594194,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { ssr as _$ssr } from \"solid-js/web\";\nimport { ssrAttribute as _$ssrAttribute } from \"solid-js/web\";\nimport { escape as _$escape } from \"solid-js/web\";\nimport { ssrHydrationKey as _$ssrHydrationKey } from \"solid-js/web\";\nconst _tmpl$ = [\"<div\", \"><label for=\\\"email\\\"><div>Email Address</div><!--#-->\", \"<!--/--></label><input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\"\", \" aria-describedby=\\\"email-error\\\" aria-autocomplete=\\\"inline\\\"></div>\"],\n  _tmpl$2 = [\"<div\", \"><label for=\\\"password\\\"><div>Password</div><div class=\\\"small\\\">Must have at least 6 characters.</div><!--#-->\", \"<!--/--></label><input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" aria-autocomplete=\\\"inline\\\"\", \" aria-describedby=\\\"password-error\\\"></div>\"],\n  _tmpl$3 = [\"<button\", \" type=\\\"submit\\\">Sign up</button>\"],\n  _tmpl$4 = [\"<input\", \" type=\\\"hidden\\\" name=\\\"redirectTo\\\"\", \">\"],\n  _tmpl$5 = [\"<div\", \"><div><input id=\\\"remember\\\" name=\\\"remember\\\" type=\\\"checkbox\\\"><label for=\\\"remember\\\">Remember me</label></div><div class=\\\"light\\\"><span class=\\\"small\\\">Already have an account? </span><!--#-->\", \"<!--/--></div></div>\"],\n  _tmpl$6 = [\"<div\", \"><div>\", \"</div></div>\"],\n  _tmpl$7 = [\"<div\", \" class=\\\"error small\\\" id=\\\"email-error\\\">\", \"</div>\"],\n  _tmpl$8 = [\"<div\", \" class=\\\"error small\\\" id=\\\"password-error\\\">\", \"</div>\"];\nimport \"/@fs/Users/thom/Sites/th-m/th-m.codes.mono/node_modules/solid-start/data/index.ts\";\nimport { createRouteAction } from \"/@fs/Users/thom/Sites/th-m/th-m.codes.mono/node_modules/solid-start/data/index.ts\";\nimport server$ from \"/@fs/Users/thom/Sites/th-m/th-m.codes.mono/node_modules/solid-start/server/server.ts\";\nimport { A, useLocation } from \"/@fs/Users/thom/Sites/th-m/th-m.codes.mono/node_modules/solid-start/index.tsx\";\nimport { json } from \"/@fs/Users/thom/Sites/th-m/th-m.codes.mono/node_modules/solid-start/server/server.ts\";\nimport { createUserSession } from \"/src/models/session.server.ts\";\nimport { createUser } from \"/src/models/users.server.ts\";\nconst $$server_module0 = server$.createHandler(async function $$serverHandler0(form, {\n  request\n}) {\n  const $$ctx = this;\n  const email = form.get(\"email\");\n  const password = form.get(\"password\");\n  const remember = form.get(\"remember\");\n  const redirectTo = form?.get(\"redirectTo\") ?? \"/\";\n  const errors = {\n    email: \"\",\n    password: \"\"\n  };\n  if (!password || password.length < 6) {\n    errors.password = \"Password must be at least 6 characters long\";\n  }\n  if (!email) {\n    errors.email = \"Email is required\";\n  }\n  if (errors.email || errors.password) {\n    return {\n      errors\n    };\n  }\n  console.log({\n    email,\n    password\n  });\n  const {\n    session,\n    error\n  } = await createUser(email, password);\n  if (error) {\n    return json({\n      errors: error\n    }, {\n      status: 400\n    });\n  }\n  if (!session) {\n    return json({\n      errors: {\n        email: 'Invalid email or password'\n      }\n    }, {\n      status: 400\n    });\n  }\n  if (errors.email || errors.password) {\n    return json({\n      errors\n    }, {\n      status: 400\n    });\n  }\n  return createUserSession({\n    request,\n    session,\n    remember: remember === 'on' ? true : false,\n    redirectTo: redirectTo\n  });\n}, \"/_m/src/routes/(auth)/sign-up.tsx/0/signup\", true);\nserver$.registerHandler(\"/_m/src/routes/(auth)/sign-up.tsx/0/signup\", $$server_module0);\nexport default function SignUp() {\n  const location = useLocation();\n  const [signup, {\n    Form\n  }] = createRouteAction($$server_module0);\n  const redirectPath = location.query.redirectTo ?? \"/\";\n\n  // @ts-ignore\n  const errors = signup?.result?.errors;\n  return _$ssr(_tmpl$6, _$ssrHydrationKey(), _$escape(_$createComponent(Form, {\n    method: \"post\",\n    noValidate: true,\n    get children() {\n      return [_$ssr(_tmpl$, _$ssrHydrationKey(), errors?.email && _$ssr(_tmpl$7, _$ssrHydrationKey(), _$escape(errors?.email)), _$ssrAttribute(\"aria-invalid\", errors?.email ? _$escape(true, true) : _$escape(false, true), false)), _$ssr(_tmpl$2, _$ssrHydrationKey(), errors?.password && _$ssr(_tmpl$8, _$ssrHydrationKey(), _$escape(errors?.password)), _$ssrAttribute(\"aria-invalid\", errors?.password ? _$escape(true, true) : _$escape(false, true), false)), _$ssr(_tmpl$3, _$ssrHydrationKey()), _$ssr(_tmpl$4, _$ssrHydrationKey(), _$ssrAttribute(\"value\", _$escape(redirectPath, true), false)), _$ssr(_tmpl$5, _$ssrHydrationKey(), _$escape(_$createComponent(A, {\n        href: \"/login\",\n        children: \"Login\"\n      })))];\n    }\n  })));\n}",
      "start": 1684878594194,
      "end": 1684878594195,
      "order": "normal"
    }
  ]
}
